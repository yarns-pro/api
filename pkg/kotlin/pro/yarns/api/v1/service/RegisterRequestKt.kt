// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: v1/service/service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package pro.yarns.api.v1.service;

@kotlin.jvm.JvmName("-initializeregisterRequest")
public inline fun registerRequest(block: pro.yarns.api.v1.service.RegisterRequestKt.Dsl.() -> kotlin.Unit): pro.yarns.api.v1.service.RegisterRequest =
  pro.yarns.api.v1.service.RegisterRequestKt.Dsl._create(pro.yarns.api.v1.service.RegisterRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `pro.yarns.api.v1.service.RegisterRequest`
 */
public object RegisterRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: pro.yarns.api.v1.service.RegisterRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: pro.yarns.api.v1.service.RegisterRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): pro.yarns.api.v1.service.RegisterRequest = _builder.build()

    /**
     * `bytes publicKey = 1 [json_name = "publicKey"];`
     */
    public var publicKey: com.google.protobuf.ByteString
      @kotlin.jvm.JvmName("getPublicKey")
        get() = _builder.publicKey
      @kotlin.jvm.JvmName("setPublicKey")
        set(value) {
        _builder.publicKey = value
      }
    /**
     * `bytes publicKey = 1 [json_name = "publicKey"];`
     */
    public fun clearPublicKey() {
      _builder.clearPublicKey()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun pro.yarns.api.v1.service.RegisterRequest.copy(block: `pro.yarns.api.v1.service`.RegisterRequestKt.Dsl.() -> kotlin.Unit): pro.yarns.api.v1.service.RegisterRequest =
  `pro.yarns.api.v1.service`.RegisterRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

